{"name": "test_genarate_ticket[2023-05-26 15:14:11-710-1-True-0-成功]", "status": "failed", "statusDetails": {"message": "AssertionError: 门票生成 ==>> 接口返回码是 【403】, 返回信息：token 未认证\nassert False == True\n +  where False = <core.result_base.ResultBase object at 0x000001E8F1067BE0>.success", "trace": "self = <testcases.api.test_04_ticket.TestTickt object at 0x000001E8F0FCC280>, login_fixture = {'code': 0, 'data': 'ee848913-aad0-459a-b914-27393887664a', 'message': '成功', 'success': True}, expiredTime = '2023-05-05 18:48:38'\nroomId = 710, ticketAmount = 1, except_result = True, except_code = 0, except_message = '成功'\n\n    @allure.story(\"用例--生成门票\")\n    @allure.description(\"该用例是针对生成门票的接口测试\")\n    @allure.issue(\"https://www.dahua.com\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://www.dahua.com\", name=\"点击跳转到对应用例的链接地址\")\n    @pytest.mark.parametrize(\"expiredTime, roomId , ticketAmount, except_result, except_code, except_message\",\n                             api_data[\"test_genarate_ticket\"])\n    def test_genarate_ticket(self, login_fixture, expiredTime, roomId, ticketAmount, except_result, except_code,\n                             except_message):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        userinfo = login_fixture\n        expiredTime = settime.add_time()\n        result = genarate_ticket(expiredTime, roomId, ticketAmount, userinfo.get(\"data\"))\n        step_2()\n>       assert result.success == except_result, result.error\nE       AssertionError: 门票生成 ==>> 接口返回码是 【403】, 返回信息：token 未认证\nE       assert False == True\nE        +  where False = <core.result_base.ResultBase object at 0x000001E8F1067BE0>.success\n\ntestcases\\api\\test_04_ticket.py:60: AssertionError"}, "description": "该用例是针对生成门票的接口测试", "steps": [{"name": "步骤2 ==>> 门票生成", "status": "passed", "start": 1683197318943, "stop": 1683197318944}], "attachments": [{"name": "log", "source": "c6621558-21bf-4df0-bdb7-a8bcfe2c159a-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "4f9a5722-2409-4773-afeb-cf996e524f86-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "expiredTime", "value": "'2023-05-26 15:14:11'"}, {"name": "roomId", "value": "710"}, {"name": "ticketAmount", "value": "1"}, {"name": "except_result", "value": "True"}, {"name": "except_code", "value": "0"}, {"name": "except_message", "value": "'成功'"}], "start": 1683197318930, "stop": 1683197318944, "uuid": "40c22132-d62e-4ccd-be4d-1cf408d5580d", "historyId": "910ce0e8fac42b2d259ab2ad7c31dac1", "testCaseId": "20545bbd9b03eac93707efdc4b37dffc", "fullName": "testcases.api.test_04_ticket.TestTickt#test_genarate_ticket", "labels": [{"name": "epic", "value": "针对单个接口进行测试"}, {"name": "feature", "value": "门票模块"}, {"name": "story", "value": "用例--生成门票"}, {"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "testcases.api"}, {"name": "suite", "value": "test_04_ticket"}, {"name": "subSuite", "value": "TestTickt"}, {"name": "host", "value": "DESKTOP-92T6R3T"}, {"name": "thread", "value": "7856-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api.test_04_ticket"}], "links": [{"type": "test_case", "url": "https://www.dahua.com", "name": "点击跳转到对应用例的链接地址"}, {"type": "issue", "url": "https://www.dahua.com", "name": "点击，跳转到对应BUG的链接地址"}]}
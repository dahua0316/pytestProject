{"name": "test_get_ticket_list[710-1-10-True-0-成功]", "status": "failed", "statusDetails": {"message": "AssertionError: 获取门票列表 ==>> 接口返回码是 【403】,返回信息：token 未认证\nassert False == True\n +  where False = <core.result_base.ResultBase object at 0x0000013DD3EA6050>.success", "trace": "self = <testcases.api.test_04_ticket.TestTickt object at 0x0000013DD3DF6F20>, login_fixture = {'code': 0, 'data': '25207b1d-b0e5-4c71-8226-dfac66dc8ec9', 'message': '成功', 'success': True}, roomId = 710, curuent = 1, size = 10\nexcept_result = True, except_code = 0, except_message = '成功'\n\n    @allure.story(\"用例--获取门票列表\")\n    @allure.description(\"该用例是针对获取门票列表的接口测试\")\n    @allure.issue(\"https://www.dahua.com\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://www.dahua.com\", name=\"点击跳转到对应用例的链接地址\")\n    @pytest.mark.parametrize(\"roomId, curuent , size , except_result, except_code, except_message\",\n                             api_data[\"test_get_ticket_list\"])\n    def test_get_ticket_list(self, login_fixture, roomId, curuent, size, except_result, except_code, except_message):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        userinfo = login_fixture\n        result = get_ticket_list(roomId, curuent, size, userinfo.get(\"data\"))\n        step_1()\n>       assert result.success == except_result, result.error\nE       AssertionError: 获取门票列表 ==>> 接口返回码是 【403】,返回信息：token 未认证\nE       assert False == True\nE        +  where False = <core.result_base.ResultBase object at 0x0000013DD3EA6050>.success\n\ntestcases\\api\\test_04_ticket.py:40: AssertionError"}, "description": "该用例是针对获取门票列表的接口测试", "steps": [{"name": "步骤1 ==>> 获取门票列表", "status": "passed", "start": 1683198519689, "stop": 1683198519689}], "attachments": [{"name": "log", "source": "64c0eb7b-8113-4ef7-a7da-ff7640507e58-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "0c495f6d-fd0a-4740-98b8-0d56a09d208f-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "roomId", "value": "710"}, {"name": "curuent", "value": "1"}, {"name": "size", "value": "10"}, {"name": "except_result", "value": "True"}, {"name": "except_code", "value": "0"}, {"name": "except_message", "value": "'成功'"}], "start": 1683198519668, "stop": 1683198519690, "uuid": "ddd0dbd0-696a-47d3-ae0e-2cbc8c2a2ee3", "historyId": "fd3b9d3540ff020c483413a963dd0079", "testCaseId": "49db689f018d59864b69b7a0d1648cee", "fullName": "testcases.api.test_04_ticket.TestTickt#test_get_ticket_list", "labels": [{"name": "epic", "value": "针对单个接口进行测试"}, {"name": "story", "value": "用例--获取门票列表"}, {"name": "severity", "value": "normal"}, {"name": "feature", "value": "门票模块"}, {"name": "parentSuite", "value": "testcases.api"}, {"name": "suite", "value": "test_04_ticket"}, {"name": "subSuite", "value": "TestTickt"}, {"name": "host", "value": "DESKTOP-92T6R3T"}, {"name": "thread", "value": "21484-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api.test_04_ticket"}], "links": [{"type": "test_case", "url": "https://www.dahua.com", "name": "点击跳转到对应用例的链接地址"}, {"type": "issue", "url": "https://www.dahua.com", "name": "点击，跳转到对应BUG的链接地址"}]}